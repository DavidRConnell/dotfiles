#!/bin/zsh
# Install all my git repos, pip, python modules, etc and move the files in
# this repo to $HOME

PROGNAME=$(basename $0)
DIRPATH=$(dirname $0)

function usage {
	cat <<- _EOF_

	$PROGNAME: usage: $PROGNAME [-h]

	Overview:

	Links config files in \$HOME to the files in $DIRPATH. Files
	already in $HOME with the same name as a file in $DIRPATH will be moved
	to \$HOME/backupdots before being replaced.

	Hidden files and directories in this directory are ignored during
	linking. Rename dotfiles to be linked with a leading '_' in place of
	'.'. Files in directories are moved recursively into $HOME/DIR where
	DIR is the name of the directory the file is contained in and any files
	already in \$HOME/DIR are left alone.

	Arguments:

	-h	Show this help.

	_EOF_
}

function lnfiles {

	for file in $1/*; do
		newfile=$(convertname $file)
		expandedfile=$(expanddot $file)

		if alreadylinked $expandedfile $newfile; then
			continue
		fi

		if [ -d $file ]; then
			[ -d $newfile ] || mkdir $newfile
			lnfiles $file
		fi

		if $([[ -f $newfile ]]) || $([[ -L $newfile ]]); then
			newpath=${newfile#${HOME}}
			mkdir -p ~/backupdots/$(dirname $newpath)
			mv $newfile ~/backupdots$newpath
		fi

		ln -s $expandedfile $newfile
	done
}

function convertname {
	newpath="${HOME}/${1#*$DIRPATH/}"
	echo ${newpath//'\/_'/'/.'}
}

function expanddot {
	if [[ $1 =~ ^'.' ]]; then
		echo ${1/\./$PWD}
	else
		echo $1
	fi
}

function alreadylinked {
	return $($([ -L $2 ]) && $([[ $(readlink $2) == $1 ]]))
}

cd $DIRPATH
[ -d ~/backupdots ] || mkdir ~/backupdots
lnfiles $DIRPATH
[[ -n $(ls -A ~/backupdots) ]] || rmdir ~/backupdots
cd - &> /dev/null
